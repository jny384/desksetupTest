{"ast":null,"code":"var _jsxFileName = \"/Users/jeongnayeong/Desktop/git/deskts/src/component/layout/Header.tsx\";\nimport React from 'react';\nimport { Container } from '../common/Grid';\n// import { autoLogin, logout } from '../../api/u';\nimport { NavBar, NavLinkItem } from '../common/Nav';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// import { setUser, resetUser } from '../../modules/users';\n\nconst Header = () => {\n  // const nickname = useSelector((state: RootState) => state.users.nickname);\n  // const dispatch = useDispatch();\n\n  // const [isLoggedIn, setLoggedIn] = React.useState<boolean>(false);\n\n  // const checkIsLoggin = useCallback(async () => {\n  // try {\n  //     //\n  //     // const res = await autoLogin();\n  //     setLoggedIn(res.success);\n  //     if (res.success) {\n  //         // dispatch(setUser(res.user.nickname));\n  //     }\n  // } catch (err) {\n  //     console.error(err);\n  // }\n  // }, [dispatch]);\n\n  // const logoutHandler = async (e: React.MouseEvent<HTMLButtonElement>) => {\n  //     e.preventDefault();\n  //     try {\n  //         // await logout();\n  //         setLoggedIn(false);\n  //         // dispatch(resetUser());\n  //     } catch (err) {\n  //         console.error(err);\n  //     }\n  // }\n  //\n  // React.useEffect(() => {\n  //     // checkIsLoggin();\n  // }, [checkIsLoggin]);\n\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    className: \"App-header\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(NavBar, {\n        children: /*#__PURE__*/_jsxDEV(NavLinkItem, {\n          to: \"/\",\n          children: \"\\uBA54\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n};\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","Container","NavBar","NavLinkItem","jsxDEV","_jsxDEV","Header","className","children","to","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/jeongnayeong/Desktop/git/deskts/src/component/layout/Header.tsx"],"sourcesContent":["import React, { useCallback } from 'react';\n\nimport { Container } from '../common/Grid';\n// import { autoLogin, logout } from '../../api/u';\nimport { NavBar, NavLinkItem } from '../common/Nav';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../modules';\n// import { setUser, resetUser } from '../../modules/users';\n\nconst Header = () => {\n    // const nickname = useSelector((state: RootState) => state.users.nickname);\n    // const dispatch = useDispatch();\n\n    // const [isLoggedIn, setLoggedIn] = React.useState<boolean>(false);\n\n    // const checkIsLoggin = useCallback(async () => {\n        // try {\n        //     //\n        //     // const res = await autoLogin();\n        //     setLoggedIn(res.success);\n        //     if (res.success) {\n        //         // dispatch(setUser(res.user.nickname));\n        //     }\n        // } catch (err) {\n        //     console.error(err);\n        // }\n    // }, [dispatch]);\n\n    // const logoutHandler = async (e: React.MouseEvent<HTMLButtonElement>) => {\n    //     e.preventDefault();\n    //     try {\n    //         // await logout();\n    //         setLoggedIn(false);\n    //         // dispatch(resetUser());\n    //     } catch (err) {\n    //         console.error(err);\n    //     }\n    // }\n    //\n    // React.useEffect(() => {\n    //     // checkIsLoggin();\n    // }, [checkIsLoggin]);\n\n    return (\n        <header className=\"App-header\">\n            <Container>\n                <NavBar>\n                    <NavLinkItem to=\"/\">메인</NavLinkItem>\n                    {/*{ nickname }*/}\n                    {/*{*/}\n                    {/*    isLoggedIn ?*/}\n                    {/*        <button onClick={logoutHandler}>로그아웃</button> :*/}\n                    {/*        <NavLinkItem to=\"/login\">로그인</NavLinkItem>*/}\n                    {/*}*/}\n                    {/* <PrimaryButton onClick={logoutHandler}>로그아웃</PrimaryButton> */}\n                </NavBar>\n            </Container>\n        </header>\n    )\n}\n\nexport default Header;"],"mappings":";AAAA,OAAOA,KAAK,MAAuB,OAAO;AAE1C,SAASC,SAAS,QAAQ,gBAAgB;AAC1C;AACA,SAASC,MAAM,EAAEC,WAAW,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGpD;;AAEA,MAAMC,MAAM,GAAGA,CAAA,KAAM;EACjB;EACA;;EAEA;;EAEA;EACI;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACJ;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACID,OAAA;IAAQE,SAAS,EAAC,YAAY;IAAAC,QAAA,eAC1BH,OAAA,CAACJ,SAAS;MAAAO,QAAA,eACNH,OAAA,CAACH,MAAM;QAAAM,QAAA,eACHH,OAAA,CAACF,WAAW;UAACM,EAAE,EAAC,GAAG;UAAAD,QAAA,EAAC;QAAE;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAc;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAQ/B;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACD;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACP;AAEjB,CAAC;AAAAC,EAAA,GAlDKR,MAAM;AAoDZ,eAAeA,MAAM;AAAC,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}